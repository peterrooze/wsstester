# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  release:
    needs: build
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            exe: ''
          - os: windows
            exe: '.exe'
          - os: darwin
            exe: ''
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: |
        GOOS=${{ matrix.os }} GOARCH=amd64 go build -o wsstester-${{ matrix.os }}-amd64${{ matrix.exe }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./wsstester-${{ matrix.os }}-amd64${{ matrix.exe }}
        asset_name: wsstester-${{ matrix.os }}-amd64${{ matrix.exe }}
        asset_content_type: application/octet-stream
